# -*- coding: utf-8 -*-
"""CSI資料處理—2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wjvVvKKTUo2UBhJUn6ryo_woPsa_ZM5U
"""

!pip install numpy scipy matplotlib

"""上傳 CSI raw 檔案"""

from google.colab import files
uploaded = files.upload()

import numpy as np

filename = 'amos'
with open(filename, 'rb') as f:
    raw = f.read()

print("檔案大小（bytes）:", len(raw))

# 用 int16 little-endian 解析
arr_i16 = np.frombuffer(raw, dtype='<i2')
print("int16 數量:", arr_i16.size)

# 假設為 I/Q 成對資料 → 組成複數 → 計算振幅
if arr_i16.size % 2 == 0:
    iq = arr_i16.reshape(-1, 2)
    complex_samples = iq[:,0].astype(np.float32) + 1j * iq[:,1].astype(np.float32)
    amp = np.abs(complex_samples)
    print("成功解讀為 I/Q 複數樣本，樣本數:", amp.size)
else:
    amp = np.abs(arr_i16.astype(np.float32))
    print("無法配對 I/Q，改用 int16 絕對值")

from scipy.signal import butter, filtfilt

fs = 100.0  # 假設取樣率為 100 Hz
low, high = 0.1, 0.5  # 呼吸頻率範圍 (Hz)


nyq = 0.5 * fs
b, a = butter(4, [low/nyq, high/nyq], btype='band')

# 濾波 (filtfilt 可避免相位偏移)
filtered = filtfilt(b, a, amp)

import matplotlib.pyplot as plt

t = np.arange(len(amp)) / fs

plt.figure(figsize=(10,4))
plt.plot(t[:2000], amp[:2000], label='原始振幅')
plt.plot(t[:2000], filtered[:2000], label='濾波後')
plt.xlabel('Time (s)')
plt.ylabel('Amplitude')
plt.legend()
plt.title('CSI Amplitude (前2000點)')
plt.show()



